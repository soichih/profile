
const fs = require('fs');
const { createLogger, format, transports } = require('winston');
const { combine, timestamp, label, prettyPrint } = format;

exports.profile = {
    //page for main login form
    login_url: 'https://dev1.soichi.us/auth',
}

exports.db = {
    dialect: 'sqlite',
    storage: "/home/hayashis/profile.sqlite",
    logging: false,
}

exports.event = {
    amqp: {
        url: "amqp://profile:gobrain@localhost:5672/brainlife"
    },
}

exports.express = {
    //web server port
    port: 12402,

    jwt: {
        pub: fs.readFileSync('/home/hayashis/git/auth/api/config/auth.pub'),
        test: fs.readFileSync(__dirname+'/../../test/test.jwt'),
    }
};

exports.logger = {
    winston: {
        level: 'debug', 
        format: combine(
            label({ label: 'profile-dev' }), 
            timestamp(),
            format.colorize(),
            format.splat(),
            format.printf(info=>{
                return `${info.timestamp} [${info.label}] ${info.level}: ${info.message}`;
            }),
        ),

        requestWhitelist: ['url', /*'headers',*/ 'method', 'httpVersion', 'originalUrl', 'query'],
        exceptionHandlers: [
            new transports.Console(),
        ],

        transports: [
            //display all logs to console
            new transports.Console({
                stderrLevels: ["error"], //error is sent to stdout by default..
            }),
        ]
    }
}


